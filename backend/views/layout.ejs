<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">

  <meta name="description"
    content="Share gists secretly with end-to-end encryption. Gossipa guarantees your privacy with 100% anonymity." />
  <meta name="keywords"
    content="anonymity, secret sharing, encrypted messaging, privacy, end-to-end encryption, anonymous communication" />
  <meta name="robots" content="index, follow" />
  <meta name="author" content="Anonym" />

  <!-- Open Graph / Facebook -->
  <meta property="og:type" content="website" />
  <meta property="og:title" content="Gossipa - Share Gists Secretly" />
  <meta property="og:description"
    content="Share your gists secretly with Gossipa. Your privacy is our priority with full end-to-end encryption." />
  <meta property="og:image" content="/img/og-image.png" />
  <meta property="og:url" content="https://yourwebsite.com" />

  <!-- Twitter -->
  <meta name="twitter:card" content="summary_large_image" />
  <meta name="twitter:title" content="Gossipa - Share Gists Secretly" />
  <meta name="twitter:description"
    content="Share your gists secretly  with Gossipa. Your privacy is our priority with full end-to-end encryption." />
  <meta name="twitter:image" content="/img/twitter-image.png" />

  <link href="https://fonts.googleapis.com/css2?family=Baloo+2&family=Quicksand&display=swap" rel="stylesheet">
  <script src="https://kit.fontawesome.com/ceb8cfc409.js" crossorigin="anonymous"></script>
  <script src="https://cdn.socket.io/4.0.0/socket.io.min.js"></script>
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script src="https://unpkg.com/wavesurfer.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/dayjs@1/plugin/relativeTime.js"></script>
  <link rel="manifest" href="/manifest.json">
  <link rel="stylesheet" href="/styles/style.css" />
  <link rel="stylesheet" href="/styles/media.css" />
  <link rel="stylesheet" href="/styles/new.css" />
  <link rel="shortcut icon" href="/img/favicon.ico" type="image/x-icon">
  <title>Gossipa || <%= locals.title ? title : null%>
  </title>

  <style>
    .install-prompt {
      /* position: fixed;
    bottom: 20px;
    right: 20px; */
      background: var(--secondary-color, #d13d87);
      color: white;
      font-weight: bold;
      border: none;
      border-radius: 50px;
      padding: 12px 20px;
      font-size: 16px;
      display: flex;
      align-items: center;
      gap: 8px;
      cursor: pointer;
      /* box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2); */
      z-index: 1000;
      overflow: hidden;
    }

    .pulse-ring {
      position: relative;
      width: 8px;
      height: 8px;
      background-color: var(--primary-color);
      backdrop-filter: blur(0);
      border-radius: 50%;
      z-index: 10;
    }

    .pulse-ring::after {
      content: '';
      position: absolute;
      top: -50% !important;
      left: -50%;
      width: 10px;
      height: 10px;
      border-radius: 50%;
      background: transparent;
      backdrop-filter: blur(50px);
      border: 3px solid var(--primary-color);
      animation: pulse 1.5s infinite;
      z-index: 0;
    }

    @keyframes pulse {
      0% {
        transform: scale(1);
        /* opacity: 0.9; */
      }

      70% {
        transform: scale(2.5);
        /* opacity: 0; */
      }

      100% {
        transform: scale(1);
        /* opacity: 0; */
      }
    }
  </style>
</head>

<body class="main-background">



  <script>
    window.addEventListener("load", function () {
      window.scrollTo({ top: 0, behavior: "smooth" });
    });
  </script>


  <header>
    <div class="container">
      <div class="header">
        <img oncontextmenu="return false;" src="../../img/logo/main-logo.png" alt="" id="main-logo" class="logo">
        <img oncontextmenu="return false;" src="../../img/logo/mobile-logo.png" alt="" id="mobile-logo" class="logo">

        <form id="liveSearchForm" action="/search" method="post" autocomplete="off">
          <div class="search" id="mobileSearch">
            <button class="search-btn" type="submit" id="toggleSearch">
              <i class="fa-solid fa-magnifying-glass"></i>
            </button>
            <input name="search" type="text" id="searchInput" placeholder="Search">
          </div>
          <ul id="suggestions" class="suggestion-box"></ul>
        </form>

        <div class="topbar-icons">
          <ul id="navbar">

            <li class="navbar nav-text">
              <a class="nav-link" href="/explore" style="color: var(--text-color);">
                <i class=" fab fa-modx fa-2x"></i>
              </a>
            </li>

            <li class="navbar">
              <a class="nav-link" href="/notifications">
                <i class="fas fa-bell fa-2x"></i>
                <span class="counter">0</span>
              </a>
            </li>
            <li class="navbar profiled">
              <button class="profile-btn"><img oncontextmenu="return false;"
                  src="<%= profilePicture ?'../.' + profilePicture: profilePicture %>" alt="" class="profile-pic thumb">
                <i class="fas fa-chevron-down"></i></button>
            </li>
            <li class="navbar dropdown">
              <div class="hamburger" id="hamburger">
                <div class="bar" id="bar1"></div>
                <div class="bar" id="bar3"></div>
              </div>
            </li>
        </div>
        <div id="menu" class="menu-hidden">
          <div class="container">
            <div class="profile-head">
              <img oncontextmenu="return false;"
                src="<%= profilePicture ? profilePicture : '../../' + profilePicture %>" alt="Profile Avatar"
                class="profile-avatar" />

              <h3 class="username-row">Hello,&nbsp;<span class="username">
                 <span class="user<%= userId %>">
                  <% if(stealthMode){  %>
                    @gossipa<%= userId %>
                    <% } else { %>
                      @<%= username %>
                      <% } %>
                </span>
                    <% if(verification===true) {%>
                      <img oncontextmenu="return false;" src="../../img/gossipa3.png" alt="Verifiied Badge"
                        class="verified-badge">
                      <% } else {%>
                        <% } %>
                </span></h3>
            </div>


            <div class="menu">
              <div class="menu-nav">

                <ul class="pages">
                  <h4>Compose a gist</h4>
                  <li><a class="nav-link" href="/feeds">View Gist</a></li>
                  <li><a class="nav-link" href="/submit">Share a Gist</a></li>
                  <li>
                    <a class="nav-link" href="/notifications" class="">Notifcations</a>
                  </li>
                </ul>
                <ul class="account">
                  <h4>Account</h4>
                  <li>
                    <a class="nav-link" href="/notifications" class="">Go To Profile</a>
                  </li>
                  <li><a class="nav-link" href="/profile">Edit Profile</a></li>

                  <li>
                    <form action="/logout" method="POST">
                      <button type="submit">Logout <i class="fas fa-right-from-bracket"></i></button>
                    </form>
                  </li>
                </ul>
              </div>

              <ul class="socials">
                <li>
                  <a class="nav-link" target="_blank" href="https://t.me/anonymcret"><i
                      class="fab fa-telegram fa-2x"></i></a>
                </li>
                <li>
                  <a class="nav-link" target="_blank" href=""><i class="fab fa-instagram fa-2x"></i></a>
                </li>
                <li>
                  <a class="nav-link" target="_blank" href=""><i class="fab fa-linkedin fa-2x"></i></a>
                </li>
                <li>
                  <a class="nav-link" target="_blank" href=""><i class="fab fa-github fa-2x"></i></a>
                </li>
              </ul>
              <hr />
              <div class="menu-nav-alt">
                <ul class="info">
                  <h4>Information</h4>
                  <li><a href="">About</a></li>
                  <li><a href="">Security</a></li>
                  <li><a href="">Privacy</a></li>
                  <li><a href="">Blog</a></li>
                </ul>
                <ul class="support">
                  <h4>Support</h4>
                  <li><a href="">FAQ</a></li>
                  <li><a href="">Contact</a></li>
                  <li><a href="/feedback">Reviews</a></li>
                  <li> 
                    <button id="installBtn" style="display:none;" class="install-prompt">
                      <span class="pulse-ring"></span>
                      <i class="fas fa-download"></i> Install Gossipa App
                    </button>
                  </li>

                </ul>
              </div>
              <p class="menu-lang">
                <i class="fas fa-globe"></i> English
              </p>
              <button id="close"><i class="fas fa-xmark"></i></button>
            </div>
          </div>
        </div>
        </li>
        </ul>
      </div>
    </div>
    <div id="announcement">

    </div>
  </header>



  <div class="layout-container container">

    <aside class="left-sidebar">
      <div class="aside">
        <ul class="nav">
          <li class="nav-item <%= locals.title === 'Gossip feeds' ? 'current' : null %>">
            <a href="/feeds">
              <i class="nav-icon fas fa-home"></i> &nbsp;
              <span class="nav-text">Home</span>
            </a>
          </li>
          <li class="nav-item <%= locals.title === 'Explore Your Space' ? 'current' : null %>">
            <a href="/explore">
              <i class="nav-icon fab fa-modx"></i> &nbsp;
              <span class="nav-text">Explore</span>

              <span class="nav-tag">New</span>
            </a>
          </li>
          <li class="nav-item chief <%= locals.title === 'Saved Gists' ? 'current' : null %>">
            <a href="/bookmarked">
              <i class="nav-icon fas fa-bookmark"></i>
              &nbsp;<span class="nav-text">Bookmarks</span>&nbsp;
            </a>
          </li>
          <li class="nav-item chief">
            <a href="/subscription">
              <i class="nav-icon fas fa-award"></i>
              &nbsp;<span class="nav-text">Become a Chief</span>&nbsp;
              <span class="nav-text"><img oncontextmenu="return false;" src="../../img/gossipa3.png" alt=""
                  class="nav-icon verified-badge"></span>
            </a>
          </li>
          <li class="nav-item <%= locals.title === 'My Profile' ? 'current' : null %>">
            <a href="/profile">
              <i class="nav-icon fas fa-circle-user"></i> &nbsp;
              <span class="nav-text">My Profile</span>
            </a>
          </li>
          <li class="nav-item blur">
            <a aria-disabled="true">

              <i class="nav-icon fas fa-comments"></i> &nbsp;
              <span class="nav-text">GossipaCity</span>

              <span class="nav-tag">soon</span>
            </a>
          </li>

          <li class="nav-item <%= locals.title === 'Share your Gossip' || 'Edit your Gossip' ? 'current' : null %>">
            <a href="/submit">
              <i class="fas fa-circle-plus nav-icon"></i>
              &nbsp;<span class="nav-text"> Compose Gist</span>&nbsp;
              <i class="fas fa-chevron-down nav-text"></i>
            </a>

          </li>
        </ul>
      </div>

    </aside>

    <main>
      <%- body %>
    </main>

   

    <div id="announcement-overlay" class="hidden">
      <div class="trumpet-animation"></div>
      <div class="overlay-content" text-align="center">
        <center>
          <h2>Announcement! 🎇🎆</h2>
          <h4>Top Most Discussed Gist</h4>
          <!-- <p id="pin-secret"></p> -->
          <small id="posted-by"></small>
          <div id="countdown-timer">5</div>
        </center>
      </div>
      <button id="close-announcement" class="btn btn-dark btn-lg">Close</button>
    </div>

     <div class="theme-switch">
              <button id="themeToggleBtn" class="theme-toggle-btn">🌙<span class="nav-text">Dark Mode</span></button>
      </div>


    <!-- Content of each page will be injected here -->

    <!-- Notifications Container -->
    <div id="notification"></div>

    <div id="milestone-badge" class="hidden">🎉 10 Reactions! 🎉</div>
  </div>


  <script>
    const header = document.querySelector("header");
    const nextSection = document
      .querySelector("body")
      .querySelector("section:not(.active)");
    const logo = document.getElementById("logo");

    window.addEventListener("scroll", function () {
      const scrolled = window.scrollY > 0;
      if (scrolled) {
        let body = document.querySelector("body");
        body.style.overflowY = "scroll";
        header.classList.add("scrolled");
      } else {
        header.classList.remove("scrolled");
      }
    });
  </script>

  <script>
    const searchWrapper = document.getElementById("mobileSearch");
    const toggleBtn = document.getElementById("toggleSearch");
    const searchInput = document.getElementById("searchInput");
    const suggestionsBox = document.getElementById("suggestions");

    let debounceTimer;

    toggleBtn.addEventListener("click", function (e) {
      if (window.innerWidth <= 768) {
        if (document.activeElement !== searchInput) {
          e.preventDefault();
          searchWrapper.classList.toggle("active");

          if (searchWrapper.classList.contains("active")) {
            searchInput.focus();
          } else {
            searchInput.value = "";
            suggestionsBox.innerHTML = "";
            suggestionsBox.style.display = "none"; // <- Hide it here
          }
        }
      } else {
        // Desktop validation
        if (searchInput.value.trim().length === 0) {
          e.preventDefault();
          suggestionsBox.innerHTML = "<li class='no-result'>Please enter a search keyword</li>";
          suggestionsBox.style.display = "block";
        }
      }
    });


    // Click outside to collapse
    document.addEventListener("click", function (e) {
      if (
        window.innerWidth <= 768 &&
        !searchWrapper.contains(e.target)
      ) {
        searchWrapper.classList.remove("active");
        searchInput.value = "";
        suggestionsBox.innerHTML = "";
      }
    });

    // Live search logic
    searchInput.addEventListener("keyup", function (e) {
      clearTimeout(debounceTimer);
      const query = this.value.trim();

      if (query.length === 0) {
        e.preventDefault()
        suggestionsBox.innerHTML = "";
        suggestionsBox.style.display = "none"; // <- Ensure it is hidden
        searchWrapper.classList.toggle("active");
        return;
      }

      suggestionsBox.style.display = "none"; // Reset before debounce

      debounceTimer = setTimeout(() => {
        fetch("/searching", {
          method: "POST",
          headers: {
            "Content-Type": "application/json"
          },
          body: JSON.stringify({ search: query })
        })
          .then(res => res.json())
          .then(data => {
            suggestionsBox.innerHTML = "";

            if (data.searchResults.length === 0) {
              suggestionsBox.innerHTML = "<li class='no-result'>No result found</li>";
              suggestionsBox.style.display = "block"; // <- Show only when needed
              return;
            }

            suggestionsBox.style.display = "block";

            function highlightMatch(text, keyword) {
              const regex = new RegExp(`(${keyword})`, "gi");
              return text.replace(regex, "<mark>$1</mark>");
            }

            function toggleRead(e, btn, keyword) {
              e.stopPropagation();
              const textEl = btn.parentElement;
              const raw = textEl.getAttribute("data-full");
              const expanded = textEl.classList.contains("expanded");

              if (!expanded) {
                textEl.innerHTML = highlightMatch(raw, keyword);
                const newBtn = document.createElement("button");
                newBtn.textContent = "Show Less";
                newBtn.className = "read-more";
                newBtn.onclick = ev => toggleRead(ev, newBtn, keyword);
                textEl.appendChild(newBtn);
                textEl.classList.add("expanded");
              } else {
                const short = raw.slice(0, 150) + "...";
                textEl.innerHTML = highlightMatch(short, keyword);
                const newBtn = document.createElement("button");
                newBtn.textContent = "Read More";
                newBtn.className = "read";
                newBtn.onclick = ev => toggleRead(ev, newBtn, keyword);
                textEl.appendChild(newBtn);
                textEl.classList.remove("expanded");
              }
            }

            data.searchResults.forEach(item => {
              const li = document.createElement("li");
              li.classList.add("suggestion-item");

              const short = item.secret.length > 50 ? item.secret.slice(0, 50) + "..." : item.secret;
              const highlightedText = highlightMatch(item.secret, query);

              li.innerHTML = `
      <span class="arrow">→</span>
       <div class="search-text short-text" data-full="${item.secret.replace(/"/g, '&quot;')}">
        ${highlightedText}
        ${item.secret.length > 50 ? '<button class="read-more" onclick="toggleRead(event, this, \'' + query + '\')">Read More</button>' : ''}
      </div>
    `;

              suggestionsBox.insertBefore(li, document.getElementById("loadMore"));

              li.addEventListener("click", () => {
                window.location.href = `/secret/${item.id}`;
              });

              suggestionsBox.appendChild(li);
            });
          })
          .catch(err => {
            suggestionsBox.style.display = "none"; // fallback to hidden
            console.error("Live search error:", err);
          });
      }, 300);
    });

  </script>



  <script>
    const showAnnouncement = (secret) => {
      const overlay = document.getElementById("announcement-overlay");
      // const secretText = document.getElementById("pin-secret");
      const postedBy = document.getElementById("posted-by");
      const countdownTimer = document.getElementById("countdown-timer");
      const closeButton = document.getElementById("close-announcement");

      // secretText.textContent = `"${secret.secret}"`;
      postedBy.textContent = `Goes to ~~@anonym${secret.user_id}~~`;

      let countdown = 5;
      const countdownInterval = setInterval(() => {
        countdown -= 1;
        countdownTimer.textContent = countdown;

        if (countdown === 0) {
          clearInterval(countdownInterval);
          setTimeout(() => {
            overlay.classList.add("hidden");
            pinSecret(secret);
          }, 1000);
        }
      }, 1000);

      overlay.classList.remove("hidden");

      closeButton.addEventListener("click", () => {
        overlay.classList.add("hidden");
        pinSecret(secret);
      });
    };

  </script>

  <script>
    function updateCountdown() {
      const countdownEl = document.getElementById("countdown");
      // const announcement= document.getElementById("announcement");
      if (!countdownEl) return;

      const now = new Date();
      const nextTarget = new Date();
      nextTarget.setUTCHours(11, 0, 0, 0); // 11:00 AM GMT

      if (now > nextTarget) {
        nextTarget.setUTCDate(nextTarget.getUTCDate() + 1); // move to next day
      }

      const distance = nextTarget - now;

      const hours = String(Math.floor((distance / (1000 * 60 * 60)) % 24)).padStart(2, '0');
      const minutes = String(Math.floor((distance / (1000 * 60)) % 60)).padStart(2, '0');
      const seconds = String(Math.floor((distance / 1000) % 60)).padStart(2, '0');

      const span = document.createElement('span')
      span.textContent = `${hours}:${minutes}:${seconds}`
      // span.className = 'counter'

      countdownEl.textContent = `Next top gossip to be selected in:`;
      countdownEl.appendChild(span)
      countdownEl.style.flex = " 1 1 100% !important"
      countdownEl.style.width = "100% !important"
      span.style.color = "var(--secondary-color)"

    }

    // Start the countdown interval when DOM is ready
    document.addEventListener("DOMContentLoaded", () => {
      updateCountdown();
      setInterval(updateCountdown, 1000);
    });
  </script>


  <script>
    const reactToSecret = async (secretId, type) => {
      try {
        const response = await fetch(`/secrets/${secretId}/react`, {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ type }),
        });

        const data = await response.json();
        console.log(data)

        if (data.success) {
          // Update the reactions count on the UI
          const secretCard = document.querySelector(
            `[data-id="${secretId}"]`
          );
          const reactionCount = secretCard.querySelector(
            `.reaction-btn[data-type="${type}"] .reaction-count`
          );
          reactionCount.textContent = data.reactions[type] || 0;

          // Trigger confetti if milestone is reached
          if (data.milestone) {
            triggerConfetti();
            showMilestoneBadge();
          }
        } else {
          console.error(data.error);
        }
      } catch (error) {
        console.error("Error reacting:", error);
      }
    };

    function triggerConfetti() {
      confetti({
        particleCount: 100, // Number of confetti particles
        spread: 70, // Spread angle
        origin: { y: 0.6 }, // Start position
        colors: ["#ff6f61", "#ffcc00", "#66ff99", "#6699ff", "#ff99cc"], // Custom colors
      });
    }

    function showMilestoneBadge() {
      const badge = document.getElementById("milestone-badge");
      badge.classList.remove("hidden");

      setTimeout(() => {
        badge.classList.add("hidden");
      }, 5000); // 5 seconds
    }
  </script>
  <script>
    window.currentUserId = "<%= userId %>";
    window.socket = io({ query: { userId: window.currentUserId } });
    const counter = document.querySelector(".counter");

    // Handle new notifications
    socket.on("new-notification", (data) => {
      // Increment the notification counter
      const currentCount = parseInt(counter.textContent) || 0;
      counter.textContent = currentCount + 1;

      const notificationsDiv = document.getElementById("notification");
      const notification = document.createElement("div");
      notification.className = "toast";

      // Display a notification if it's a "secret" type
      if (data.type === "post") {
        notification.innerText = `New secret shared by ~~@gossipa${data.data.userId}~~: "${data.data.secret}"`;
      } else if(data.type === "comment") {
        notification.innerText = `Your Gist recieved a new comment from --@gossipa${data.data.userId}~~`;
      } else if (data.type === "selected") {
        notification.innerText = `~~@gossipa${data.data.userId}~~ Your secret is the top most discussed for the Day...... Keep it up!"`;
        notificationsDiv.style.textAlign = "center"

      }else if (data.type === "eavedrop"){
notification.innerText = `You are being eavedropped by ~~@gossipa${data.data.audience}~~:`;
      }
       else if (data.type === "reaction") {
        const { reaction, count, milestone } = data.data;
        notification.innerText =
          `Your Gossip received a new "${reaction}" reaction! Total: ${count}.`
      } else if (data.type === "stealth"){
         notification.innerText = `You ${data.data.status} stealth mode.`
      } else if (data.type === "top-secret") {
        notification.innerText = `Most discussed secret goes to ~~@gossipa${data.data.userId}~~"`;
      }

      notificationsDiv.appendChild(notification);

      // Automatically remove the notification after 5 seconds
      setTimeout(() => {
        notification.remove();
      }, 5000);

    });
  </script>
  <script>
    if ("serviceWorker" in navigator) {
      navigator.serviceWorker.register("../../js/service-worker.js");
    }
  </script>
  <script>
    let deferredPrompt;
    const installBtn = document.getElementById('installBtn');

    // Listen for install prompt event
    window.addEventListener('beforeinstallprompt', (e) => {
      e.preventDefault();
      deferredPrompt = e;
      installBtn.style.display = 'flex';
    });

    // Handle click to show install prompt
    installBtn.addEventListener('click', async () => {
      if (deferredPrompt) {
        deferredPrompt.prompt();
        const { outcome } = await deferredPrompt.userChoice;
        const notificationsDiv = document.getElementById("notification");
      const notification = document.createElement("div");
      notification.className = "toast";
        if (outcome === 'accepted') {
          console.log('User accepted the install prompt');
          
      notification.innerText = "Installation successful"
        } else {
          console.log('User dismissed the install prompt');
           notification.innerText = "Installation failed"
        }
        installBtn.style.display = 'none';
        deferredPrompt = null;

         notificationsDiv.appendChild(notification);

      // Automatically remove the notification after 5 seconds
      setTimeout(() => {
        notification.remove();
      }, 5000);
      }
    });
  </script>

  <script>
    document.querySelectorAll('.nav-btn').forEach(btn => {
      btn.addEventListener('click', function (e) {
        e.preventDefault();
        window.brandLogo?.show();
        setTimeout(() => {
          window.location.href = this.formAction;
        }, 2400);
      });
    });
  </script>


  <script src="/js/defaultTheme.js"></script>
  <script src="https://unpkg.com/lottie-web@5.10.0/build/player/lottie.min.js"></script>
</body>

</html>